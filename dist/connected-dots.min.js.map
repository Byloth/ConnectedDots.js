{"version":3,"sources":["connected-dots.js"],"names":["Point","coordX","coordY","SIZE","MIN","MAX","WOBBING_RANGE","ANIM_TIME","_this","this","_animation","originX","originY","X","Y","closest","size","Math","random","startAnimation","newCoordX","newCoordY","duration","TweenMax","to","ease","Back","easeInOut","onComplete","killAnimation","kill","ConnectedDots","selectorId","_context","_points","DRAW_RANGE","EXIT_COORDS","MAX_LINKS","MIN_LINKS","floor","SPACING","_domElement","document","getElementById","_jqueryElement","$","_mouse","_color","attr","_getDistance","point1","point2","sqrt","pow","_getMin","num1","num2","num3","initialize","height","window","width","getContext","x","row","y","push","x1","length","y1","x2","y2","linked","linkCount","max_links","undefined","updateFrame","timestamp","clearRect","draw","requestAnimationFrame","pointDistance","beginPath","arc","PI","fillStyle","fill","closePath","i","startingDistance","endingDistance","gradient","createLinearGradient","addColorStop","moveTo","lineTo","strokeStyle","stroke","mousemove","event","clientX","clientY","mouseout","resize"],"mappings":"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","file":"connected-dots.min.js","sourcesContent":["/*\r\n *\t\t\t\t  ConnectedDots.JS v. 2.0\r\n * \r\n *\t\t\t\t Written by Bilotta Matteo.\r\n * \r\n * Copyright Â© 2015 - 2016, Bylothink. All rights reserved.\r\n */\r\n\r\nvar Point = function(coordX, coordY)\r\n{\r\n    // Private constants:\r\n        var SIZE = {\r\n\r\n            MIN: 2,\r\n            MAX: 2\r\n        };\r\n        var WOBBING_RANGE = 100;\r\n        var ANIM_TIME = {\r\n\r\n            MIN: 1,\r\n            MAX: 2\r\n        };\r\n\r\n    // Private properties:\r\n        var _this = this;\r\n        var _animation = null;\r\n\r\n    // Public properties:\r\n        this.originX = coordX;\r\n        this.originY = coordY;\r\n\r\n        this.X = coordX;\r\n        this.Y = coordY;\r\n\r\n        this.closest = [];\r\n\r\n        this.size = (Math.random() * SIZE.MAX) + SIZE.MIN;\r\n\r\n    // Public methods:\r\n        this.startAnimation = function()\r\n        {\r\n            var newCoordX = _this.originX + ((Math.random() * WOBBING_RANGE) - (WOBBING_RANGE / 2));\r\n            var newCoordY = _this.originY + ((Math.random() * WOBBING_RANGE) - (WOBBING_RANGE / 2));\r\n\r\n            var duration = ANIM_TIME.MAX * Math.random() + ANIM_TIME.MIN;\r\n\r\n            _animation = TweenMax.to(_this, duration, {\r\n\r\n                X: newCoordX,\r\n                Y: newCoordY,\r\n\r\n                ease: Back.easeInOut,\r\n\r\n                onComplete: function()\r\n                {\r\n                    _this.startAnimation();\r\n                }\r\n            });\r\n        };\r\n\r\n        this.killAnimation = function()\r\n        {\r\n            _animation.kill();\r\n        }\r\n};\r\n\r\nvar ConnectedDots = function(selectorId)\r\n{\r\n    // Private Constants:\r\n        var DRAW_RANGE = 175;\r\n        var EXIT_COORDS = {\r\n\r\n            X: -1920,\r\n            Y: -1080\r\n        };\r\n\r\n        var MAX_LINKS = 5;\r\n        var MIN_LINKS = Math.floor(MAX_LINKS / 2);\r\n\r\n        var SPACING = 75;\r\n\r\n    // Private properties:\r\n        var _this = this;\r\n\r\n        var _domElement = document.getElementById(selectorId);\r\n        var _jqueryElement = $(_domElement);\r\n\r\n        var _context;\r\n        var _mouse = EXIT_COORDS;\r\n        var _points;\r\n        var _spacing;\r\n\r\n        var _color = _jqueryElement.attr(\"data-color\");\r\n\r\n    // Private methods:\r\n        var _getDistance = function(point1, point2)\r\n        {\r\n            return Math.sqrt(Math.pow(point1.X - point2.X, 2) + Math.pow(point1.Y - point2.Y, 2));\r\n        };\r\n\r\n        var _getMin = function(num1, num2, num3)\r\n        {\r\n            if (num1 <= num3)\r\n            {\r\n                if (num2 <= num3)\r\n                {\r\n                    if (num1 <= num2)\r\n                    {\r\n                        return num1;\r\n                    }\r\n                    else\r\n                    {\r\n                        return num2;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    return num1;\r\n                }\r\n            }\r\n            else if (num2 <= num3)\r\n            {\r\n                return num2;\r\n            }\r\n            else\r\n            {\r\n                return num3;\r\n            }\r\n        };\r\n\r\n    // Public methods:\r\n        this.initialize = function()\r\n        {\r\n            _domElement.height = $(window).height();\r\n            _domElement.width = $(window).width();\r\n\r\n            _context = _domElement.getContext(\"2d\");\r\n\r\n            /* Initializing points... */\r\n                _points = [];\r\n\r\n                for (var x = -1; (x * SPACING) < (_domElement.width + SPACING); x += 1)\r\n                {\r\n                    var row = [];\r\n\r\n                    for (var y = -1; (y * SPACING) < (_domElement.height + SPACING); y += 1)\r\n                    {\r\n                        var coordX = (x + Math.random()) * SPACING;\r\n                        var coordY = (y + Math.random()) * SPACING;\r\n\r\n                        row.push(new Point(coordX, coordY));\r\n                    }\r\n\r\n                    _points.push(row);\r\n                }\r\n\r\n            /* Connecting points... */\r\n                for (var x1 = 0; x1 < _points.length; x1 += 1)\r\n                {\r\n                    for (var y1 = 0; y1 < _points[x1].length; y1 += 1)\r\n                    {\r\n                        for (var x2 = 0; x2 < _points.length; x2 += 1)\r\n                        {\r\n                            for (var y2 = 0; y2 < _points[x2].length; y2 += 1)\r\n                            {\r\n                                if (_points[x1][y1] != _points[x2][y2])\r\n                                {\r\n                                    var linked = false;\r\n                                    var linkCount = 0;\r\n                                    var max_links = _getMin((_points.length - x1) + MIN_LINKS, (_points[x1].length - y1) + MIN_LINKS, MAX_LINKS);\r\n\r\n                                    do\r\n                                    {\r\n                                        if (_points[x1][y1].closest[linkCount] == undefined)\r\n                                        {\r\n                                            _points[x1][y1].closest.push(_points[x2][y2]);\r\n\r\n                                            linked = true;\r\n                                        }\r\n\r\n                                        linkCount += 1;\r\n                                    }\r\n                                    while ((linked == false) && (linkCount < max_links));\r\n\r\n                                    linkCount = 0;\r\n\r\n                                    while ((linked == false) && (linkCount < _points[x1][y1].closest.length))\r\n                                    {\r\n                                        if (_getDistance(_points[x1][y1], _points[x2][y2]) < _getDistance(_points[x1][y1], _points[x1][y1].closest[linkCount]))\r\n                                        {\r\n                                            _points[x1][y1].closest[linkCount] = _points[x2][y2];\r\n\r\n                                            linked = true;\r\n                                        }\r\n\r\n                                        linkCount += 1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            /* Initialization animations... */\r\n                for (var x = 0; x < _points.length; x += 1)\r\n                {\r\n                    for (var y = 0; y < _points[x].length; y += 1)\r\n                    {\r\n                        _points[x][y].startAnimation();\r\n                    }\r\n                }\r\n        };\r\n\r\n        this.updateFrame = function(timestamp)\r\n        {\r\n            _context.clearRect(0, 0, _domElement.width, _domElement.height);\r\n\r\n            _this.draw();\r\n\r\n            requestAnimationFrame(_this.updateFrame);\r\n        };\r\n\r\n        this.draw = function()\r\n        {\r\n            for (var x = 0; x < _points.length; x += 1)\r\n            {\r\n                for (var y = 0; y < _points[x].length; y += 1)\r\n                {\r\n                    var pointDistance = _getDistance(_points[x][y], _mouse);\r\n\r\n                    if (pointDistance < DRAW_RANGE)\r\n                    {\r\n                        _context.beginPath();\r\n                        _context.arc(_points[x][y].X, _points[x][y].Y, _points[x][y].size, 0, 2 * Math.PI, false);\r\n                        _context.fillStyle = \"rgba(\" + _color + \", \" + (1 - (pointDistance / DRAW_RANGE)) + \")\";\r\n                        _context.fill();\r\n                        _context.closePath();\r\n                    }\r\n\r\n                    for (var i = 0; i < _points[x][y].closest.length; i += 1)\r\n                    {\r\n                        var startingDistance = _getDistance(_points[x][y], _mouse);\r\n                        var endingDistance = _getDistance(_points[x][y].closest[i], _mouse);\r\n\r\n                        if ((startingDistance < DRAW_RANGE) || (endingDistance < DRAW_RANGE))\r\n                        {\r\n                            var gradient = _context.createLinearGradient(_points[x][y].X, _points[x][y].Y, _points[x][y].closest[i].X, _points[x][y].closest[i].Y);\r\n\r\n                            gradient.addColorStop(0, \"rgba(\" + _color + \", \" + (1 - (startingDistance / DRAW_RANGE)) + \")\");\r\n                            gradient.addColorStop(1, \"rgba(\" + _color + \", \" + (1 - (endingDistance / DRAW_RANGE)) + \")\");\r\n\r\n                            _context.beginPath();\r\n                            _context.moveTo(_points[x][y].X, _points[x][y].Y);\r\n                            _context.lineTo(_points[x][y].closest[i].X, _points[x][y].closest[i].Y);\r\n                            _context.strokeStyle = gradient;\r\n                            _context.stroke();\r\n                            _context.closePath();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n    // Start executions...\r\n        requestAnimationFrame(_this.updateFrame);\r\n\r\n    // Listening for events...\r\n        // Mouse events:\r\n            $(window).mousemove(function(event)\r\n            {\r\n                _mouse = {\r\n\r\n                    X: event.clientX,\r\n                    Y: event.clientY // + $(document).scrollTop()\r\n                };\r\n            });\r\n\r\n            $(window).mouseout(function(event)\r\n            {\r\n                _mouse = EXIT_COORDS;\r\n            });\r\n\r\n    $(window).resize(function()\r\n    {\r\n        for (var x = 0; x < _points.length; x += 1)\r\n        {\r\n            for (var y = 0; y < _points[x].length; y += 1)\r\n            {\r\n                _points[x][y].killAnimation();\r\n            }\r\n        }\r\n\r\n        _this.initialize();\r\n    });\r\n};\r\n"]}