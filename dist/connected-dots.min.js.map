{"version":3,"sources":["webpack:///webpack/bootstrap 1f9d2e81f5577f7108f6","webpack:///./src/connected-dots.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Error","jQuery","window","ANIM_TIME","DEFAULT_OPTS","autoUpdate","color","Color","getSize","width","_$window","height","EXIT_COORDS","MIN_LINKS","Math","floor","MAX_LINKS","DOTS_SIZE","_mouse","x","y","Dot","coordX","coordY","_animation","_this","this","originX","originY","closest","size","random","startAnimation","newCoordX","newCoordY","duration","TweenMax","to","ease","Back","easeInOut","onComplete","stopAnimation","kill","_getDistance","dot1","dot2","sqrt","pow","_getMin","num1","num2","num3","on","event","windowScrollTop","scrollTop","clientX","clientY","fn","connectedDots","options","isUndefined","opts","extend","domElement","_context","_dots","_color","_size","_init","ratio","devicePixelRatio","style","scale","row","push","x1","length","y1","x2","y2","linked","linkCount","max_links","_update","newSize","_draw","clearRect","dotDistance","beginPath","arc","PI","fillStyle","toString","fill","closePath","startingDistance","endingDistance","gradient","createLinearGradient","addColorStop","moveTo","lineTo","strokeStyle","stroke","requestAnimationFrame","update","getContext"],"mappings":"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","file":"connected-dots.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f9d2e81f5577f7108f6","/*\n *                ConnectedDots.JS v. 2.2.0\n * \n *                Written by Bilotta Matteo.\n * \n *  Copyright Â© 2015 - 2017, Bylothink. All rights reserved.\n */\n\n// Checking if jQuery is available...\n    if (typeof(jQuery) === \"undefined\")\n    {\n        throw new Error(\"jQuery is required by ConnectedDots to be executed.\");\n    }\n    else if (typeof(jQuery.jByloth) === \"undefined\")\n    {\n        throw new Error(\"jByloth is required by ConnectedDots to be executed.\");\n    }\n\n    // TODO: Controllo la versione attuale di jByloth?\n\n(function(jQuery, window)\n{\n    \"use strict\";\n\n    // Private static constants:\n        const ANIM_TIME = {\n\n            MIN: 1,\n            MAX: 2\n        };\n\n        const DRAW_RANGE = 175;\n        const DEFAULT_OPTS = {\n\n            autoUpdate: true,\n            color: new Color(\"265A88\"),\n            getSize: function()\n            {\n                return {\n\n                    width: _$window.width(),\n                    height: _$window.height()\n                };\n            }\n        };\n\n        const EXIT_COORDS = {\n\n            X: -1920,\n            Y: -1080\n        };\n\n        const MAX_LINKS = 5;\n        const MIN_LINKS = Math.floor(MAX_LINKS / 2);\n        const DOTS_SIZE = {\n\n            MIN: 2,\n            MAX: 2\n        };\n\n        const SPACING = 75;\n        const WOBBING_RANGE = 100;\n\n    // Private static properties:\n        let _mouse = {\n\n            x: EXIT_COORDS.X,\n            y: EXIT_COORDS.Y\n        };\n\n        let _$window = jQuery(window);\n\n    // Classes:\n        let Dot = function(coordX, coordY)\n        {\n            // Private properties:\n                let _this = this;\n\n                let _animation;\n\n            // Public properties:\n                _this.originX = coordX;\n                _this.originY = coordY;\n\n                _this.x = coordX;\n                _this.y = coordY;\n\n                _this.closest = [];\n\n                _this.size = (Math.random() * DOTS_SIZE.MAX) + DOTS_SIZE.MIN;\n\n            // Public methods:\n                _this.startAnimation = function()\n                {\n                    let newCoordX = _this.originX + ((Math.random() * WOBBING_RANGE) - (WOBBING_RANGE / 2));\n                    let newCoordY = _this.originY + ((Math.random() * WOBBING_RANGE) - (WOBBING_RANGE / 2));\n\n                    let duration = ANIM_TIME.MAX * Math.random() + ANIM_TIME.MIN;\n\n                    _animation = TweenMax.to(_this, duration, {\n\n                        x: newCoordX,\n                        y: newCoordY,\n\n                        ease: Back.easeInOut,\n\n                        onComplete: function()\n                        {\n                            _this.startAnimation();\n                        }\n                    });\n                };\n\n                _this.stopAnimation = function()\n                {\n                    _animation.kill();\n                };\n        };\n\n        let ConnectedDots = function(domElement, options)\n        {\n            // Private properties:\n                let _this = this;\n\n                let _context;\n                let _dots;\n\n                let _color;\n                let _size;\n\n            // Private methods:\n                let _init = function()\n                {\n                    let ratio = window.devicePixelRatio || 1;\n\n                    domElement.width = _size.width * ratio;\n                    domElement.height = _size.height * ratio;\n\n                    domElement.style.width = _size.width + \"px\";\n                    domElement.style.height = _size.height + \"px\";\n\n                    _context.scale(ratio, ratio);\n\n                    // Initializing dots...\n                        _dots = [];\n\n                        for (let x = -1; (x * SPACING) < (domElement.width + SPACING); x += 1)\n                        {\n                            let row = [];\n\n                            for (let y = -1; (y * SPACING) < (domElement.height + SPACING); y += 1)\n                            {\n                                let coordX = (x + Math.random()) * SPACING;\n                                let coordY = (y + Math.random()) * SPACING;\n\n                                row.push(new Dot(coordX, coordY));\n                            }\n\n                            _dots.push(row);\n                        }\n\n                    // Connecting dots...\n                        for (let x1 = 0; x1 < _dots.length; x1 += 1)\n                        {\n                            for (let y1 = 0; y1 < _dots[x1].length; y1 += 1)\n                            {\n                                for (let x2 = 0; x2 < _dots.length; x2 += 1)\n                                {\n                                    for (let y2 = 0; y2 < _dots[x2].length; y2 += 1)\n                                    {\n                                        if (_dots[x1][y1] !== _dots[x2][y2])\n                                        {\n                                            let linked = false;\n                                            let linkCount = 0;\n                                            let max_links = _getMin((_dots.length - x1) + MIN_LINKS, (_dots[x1].length - y1) + MIN_LINKS, MAX_LINKS);\n\n                                            do\n                                            {\n                                                if (jQuery.isUndefined(_dots[x1][y1].closest[linkCount]) === true)\n                                                {\n                                                    _dots[x1][y1].closest.push(_dots[x2][y2]);\n\n                                                    linked = true;\n                                                }\n\n                                                linkCount += 1;\n                                            }\n                                            while ((linked === false) && (linkCount < max_links));\n\n                                            linkCount = 0;\n\n                                            while ((linked === false) && (linkCount < _dots[x1][y1].closest.length))\n                                            {\n                                                if (_getDistance(_dots[x1][y1], _dots[x2][y2]) < _getDistance(_dots[x1][y1], _dots[x1][y1].closest[linkCount]))\n                                                {\n                                                    _dots[x1][y1].closest[linkCount] = _dots[x2][y2];\n\n                                                    linked = true;\n                                                }\n\n                                                linkCount += 1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n\n                    // Initialization animations...\n                        for (let x1 = 0; x1 < _dots.length; x1 += 1)\n                        {\n                            for (let y1 = 0; y1 < _dots[x1].length; y1 += 1)\n                            {\n                                _dots[x1][y1].startAnimation();\n                            }\n                        }\n                };\n\n                let _update = function()\n                {\n                    let newSize = options.getSize(_this);\n\n                    // TODO: Modificare questa logica introducendo una sorta di tolleranza?\n                    //\n                        if ((_size.width !== newSize.width) || (_size.height !== newSize.height))\n                        {\n                            _size = newSize;\n\n                            // TODO: Evitare di eliminare e reinizializzare, ogni volta, TUTTI i ConnectedDots?\n                            //\n                                for (let x1 = 0; x1 < _dots.length; x1 += 1)\n                                {\n                                    for (let y1 = 0; y1 < _dots[x1].length; y1 += 1)\n                                    {\n                                        _dots[x1][y1].stopAnimation();\n                                    }\n                                }\n\n                            _init();\n                        }\n                };\n\n                let _draw = function()\n                {\n                    _context.clearRect(0, 0, domElement.width, domElement.height);\n\n                    for (let x1 = 0; x1 < _dots.length; x1 += 1)\n                    {\n                        for (let y1 = 0; y1 < _dots[x1].length; y1 += 1)\n                        {\n                            let dotDistance = _getDistance(_dots[x1][y1], _mouse);\n\n                            if (dotDistance < DRAW_RANGE)\n                            {\n                                _context.beginPath();\n                                _context.arc(_dots[x1][y1].x, _dots[x1][y1].y, _dots[x1][y1].size, 0, 2 * Math.PI, false);\n                                _context.fillStyle = \"rgba(\" + _color.toString(true, true) + \", \" + (1 - (dotDistance / DRAW_RANGE)) + \")\";\n                                _context.fill();\n                                _context.closePath();\n                            }\n\n                            for (let i = 0; i < _dots[x1][y1].closest.length; i += 1)\n                            {\n                                let startingDistance = _getDistance(_dots[x1][y1], _mouse);\n                                let endingDistance = _getDistance(_dots[x1][y1].closest[i], _mouse);\n\n                                if ((startingDistance < DRAW_RANGE) || (endingDistance < DRAW_RANGE))\n                                {\n                                    let gradient = _context.createLinearGradient(_dots[x1][y1].x, _dots[x1][y1].y, _dots[x1][y1].closest[i].x, _dots[x1][y1].closest[i].y);\n\n                                    gradient.addColorStop(0, \"rgba(\" + _color.toString(true, true) + \", \" + (1 - (startingDistance / DRAW_RANGE)) + \")\");\n                                    gradient.addColorStop(1, \"rgba(\" + _color.toString(true, true) + \", \" + (1 - (endingDistance / DRAW_RANGE)) + \")\");\n\n                                    _context.beginPath();\n                                    _context.moveTo(_dots[x1][y1].x, _dots[x1][y1].y);\n                                    _context.lineTo(_dots[x1][y1].closest[i].x, _dots[x1][y1].closest[i].y);\n                                    _context.strokeStyle = gradient;\n                                    _context.stroke();\n                                    _context.closePath();\n                                }\n                            }\n                        }\n                    }\n\n                    requestAnimationFrame(_draw);\n                };\n\n            // Public methods:\n                _this.update = function()\n                {\n                    _update();\n                };\n\n            // Initializing object...\n                _color = options.color;\n                _size = options.getSize();\n\n                _context = domElement.getContext(\"2d\");\n\n                _init();\n\n            // Start executions...\n                requestAnimationFrame(_draw);\n\n            if (options.autoUpdate === true)\n            {\n                // Start listening for events...\n                    _$window.on(\"resized\", _update);\n            }\n        };\n\n    // Private static methods:\n        let _getDistance = function(dot1, dot2)\n        {\n            return Math.sqrt(Math.pow(dot1.x - dot2.x, 2) + Math.pow(dot1.y - dot2.y, 2));\n        };\n\n        let _getMin = function(num1, num2, num3)\n        {\n            if (num1 <= num3)\n            {\n                if (num2 <= num3)\n                {\n                    if (num1 <= num2)\n                    {\n                        return num1;\n                    }\n                    else\n                    {\n                        return num2;\n                    }\n                }\n                else\n                {\n                    return num1;\n                }\n            }\n            else if (num2 <= num3)\n            {\n                return num2;\n            }\n            else\n            {\n                return num3;\n            }\n        };\n\n    // TODO: Capire se Ã¨ necessario spostare questa logica all'interno di ogni instanza della classe.\n    //\n        let _onMouseMove = function(event)\n        {\n            let windowScrollTop = _$window.scrollTop();\n\n            _mouse.x = event.clientX;\n            _mouse.y = event.clientY + windowScrollTop;\n        };\n        let _onMouseOut = function()\n        {\n            _mouse.x = EXIT_COORDS.X;\n            _mouse.y = EXIT_COORDS.Y;\n        };\n\n        // Start listening for global events...\n            _$window.on(\"mousemove\", _onMouseMove);\n            _$window.on(\"mouseout\", _onMouseOut);\n\n    // Exposing ContextMenu as a jQuery plugin...\n        jQuery.fn.connectedDots = function(options)\n        {\n            if (jQuery.isUndefined(this) === false)\n            {\n                let opts = jQuery.extend({ }, DEFAULT_OPTS, options);\n\n                return new ConnectedDots(this[0], opts);\n            }\n        };\n\n})(jQuery, window);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/connected-dots.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}